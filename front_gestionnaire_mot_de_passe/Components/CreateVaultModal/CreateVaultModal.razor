@code {
    [Parameter] public EventCallback OnClose { get; set; }

    private string vaultName = string.Empty;
    private string vaultPassword = string.Empty;

    private void SubmitForm()
    {
        // Pour l'instant le formulaire est inactif
        Console.WriteLine($"Vault à créer : {vaultName} / {vaultPassword}");
    }

    private async Task CloseModal()
    {
        if (OnClose.HasDelegate)
        {
            await OnClose.InvokeAsync(null);
        }
    }
}

@if (IsVisible)
{
    <div class="modal-backdrop" @onclick="CloseModal">
        <div class="modal-content" @onclick:stopPropagation="true">
            <h2>Créer un nouveau coffre</h2>
            <div class="form-group">
                <label>Nom du coffre :</label>
                <input type="text" @bind="vaultName" />
            </div>
            <div class="form-group">
                <label>Mot de passe :</label>
                <input type="password" @bind="vaultPassword" />
            </div>
            <div class="modal-actions">
                <button @onclick="SubmitForm" disabled>Créer (inactif)</button>
                <button @onclick="CloseModal">Annuler</button>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public bool IsVisible { get; set; } = false;
}